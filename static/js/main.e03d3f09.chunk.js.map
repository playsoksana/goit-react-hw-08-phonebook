{"version":3,"sources":["components/Button/Button.js","components/Input/Input.js","helpers/notify.js","redux/contactsRedux/contactsSelector.js","redux/contactsRedux/contactsAction.js","redux/contactsRedux/contactsReducer.js","redux/authRedux/authOperation.js","redux/authRedux/authSlice.js","redux/storeMain.js","redux/contactsRedux/contactsOperation.js","components/Form/Form.js","components/Modal/Modal.js","components/Contact/Contact.js","components/Filter/Filter.js","icon/krik.jpg","view/ContactsView/ContactsView.js","redux/authRedux/authSelector.js","components/UserMenu/UserMenu.js","components/Header/Header.js","view/RegisterView/RegisterView.js","view/LoginView/LoginView.js","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","icon/kiss.jpg","components/App.js","index.js","components/Header/Header.module.css","components/Form/Form.module.css","components/Contact/Contact.module.css","components/Modal/Modal.module.css","view/ContactsView/ContactList.module.css","view/RegisterView/Register.module.css","view/LoginView/Login.module.css","components/Input/Input.module.css","components/UserMenu/UserMenu.module.css","components/Filter/Filter.module.css"],"names":["ButtonBlack","type","onClick","children","Button","className","Input","filter","name","onChangeInput","textLabel","value","allProps","styles","onChange","required","htmlFor","Label","notify","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","getContacts","state","contacts","getItems","items","getFilter","getIsLoading","isLoading","getIsEmpty","isEmpty","visibleItems","createSelector","toLowerCase","includes","addContact","createAction","deleteContact","filterContacts","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","itemsReducer","createReducer","contactsAction","_","payload","el","id","isLoadingReducer","filterReducer","errorReducer","console","log","contactsReducer","combineReducers","axios","defaults","baseURL","tokenState","token","headers","common","Authorization","register","createAsyncThunk","dataUser","a","post","data","login","logOut","fetchByToken","thunkApi","getState","auth","initialState","user","email","isLoader","isLoggedIn","authSlice","createSlice","extraReducers","pending","fulfilled","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","devTools","process","persist","persistStore","contactsOperation","fetchContactsOnServer","dispatch","message","fetchPostContactOnServer","dataContact","fetchDeleteContactOnServer","delete","length","connect","setIsVisibleModal","useState","number","setState","useSelector","contactsSelector","useDispatch","target","Form","onSubmit","ev","preventDefault","find","toUpperCase","uuidv4","Container","placeholder","pattern","title","modalRoot","document","querySelector","Modal","toggleIsVisible","isVisibleModal","handleKeyDown","useCallback","code","useEffect","window","addEventListener","removeEventListener","createPortal","Styles","Backdrop","currentTarget","Close","color","width","height","item","button","onChangeInputByFilter","filteredItems","map","notification","src","krik","alt","getName","getIsLoggedIn","getIsLoader","getToken","UserMenu","authSelector","style","Text","authOperation","Icon","Header","Navigation","exact","to","Nav","activeClassName","Active","RegisterView","password","Group","controlId","Control","variant","LoginView","PrivateRoute","props","urlFToRedirect","PublicRoute","restricted","override","css","s","loading","size","fallback","path","kiss","ReactDOM","render","StrictMode","persistor","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e03d3f09.chunk.js","sourcesContent":["import Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst ButtonBlack = ({ type, onClick, children }) => (\n  <Button type={type} className=\"btn btn-dark\" onClick={onClick}>\n    {children}\n  </Button>\n);\n\nexport default ButtonBlack;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Input.module.css';\r\n\r\nconst Input = ({\r\n  filter,\r\n  name,\r\n  onChangeInput,\r\n  textLabel,\r\n  value,\r\n  ...allProps\r\n}) => {\r\n  return (\r\n    <>\r\n      <input\r\n        className={styles.Input}\r\n        value={value}\r\n        onChange={onChangeInput}\r\n        {...allProps}\r\n        name={name}\r\n        required\r\n      />\r\n      <label htmlFor={name} className={styles.Label}>\r\n        {textLabel}\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  textLabel: PropTypes.string,\r\n  onChangeInput: PropTypes.func.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nexport default Input;\r\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst notify = name =>\n  toast.error(`${name} is already in contact!`, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\nexport default notify;\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts;\r\nconst getItems = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getIsLoading = state => state.contacts.isLoading;\r\nexport const getIsEmpty = state => state.contacts.isEmpty;\r\n\r\nconst visibleItems = createSelector([getItems, getFilter], (items, filter) =>\r\n  items.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase())),\r\n);\r\n\r\nexport { getContacts, getItems, getFilter, getIsLoading, visibleItems };\r\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contact/addContact');\nexport const deleteContact = createAction('contact/deleteContact');\nexport const filterContacts = createAction('contact/filterContacts');\nexport const isEmpty = createAction('contacts/isEmpty');\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n","import { combineReducers } from 'redux';\r\nimport * as contactsAction from './contactsAction';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [contactsAction.fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [contactsAction.addContact]: (state, { payload }) => [payload, ...state],\r\n  [contactsAction.deleteContact]: (state, { payload }) =>\r\n    state.filter(el => el.id !== payload),\r\n  default: state => state,\r\n});\r\nconst isLoadingReducer = createReducer(false, {\r\n  [contactsAction.fetchContactsRequest]: () => true,\r\n  [contactsAction.fetchContactsSuccess]: () => false,\r\n  [contactsAction.fetchContactsError]: () => false,\r\n  [contactsAction.addContact]: () => false,\r\n  [contactsAction.deleteContact]: () => false,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [contactsAction.filterContacts]: (_, { payload }) => payload,\r\n  default: state => state,\r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [contactsAction.fetchContactsError]: (_, { payload }) => payload,\r\n  [contactsAction.fetchContactsRequest]: () => null,\r\n});\r\n\r\nconst isEmpty = createReducer(false, {\r\n  [contactsAction.isEmpty]: (_, { payload }) => {\r\n    console.log(payload);\r\n    return payload;\r\n  },\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  isLoading: isLoadingReducer,\r\n  error: errorReducer,\r\n  isEmpty,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst tokenState = {\n  setToken(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  cleanToken() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = createAsyncThunk('auth/register', async dataUser => {\n  const { data } = await axios.post('/users/signup', dataUser);\n  tokenState.setToken(data.token);\n  console.log(axios.defaults.headers.common.Authorization);\n  return data;\n});\n\nexport const login = createAsyncThunk('auth/login', async dataUser => {\n  const { data } = await axios.post('/users/login', dataUser);\n  tokenState.setToken(data.token);\n  return data;\n});\n\nexport const logOut = createAsyncThunk('auth/logOut', async () => {\n  await axios.post('/users/logout');\n  tokenState.cleanToken();\n});\n\nexport const fetchByToken = createAsyncThunk(\n  'auth/fetchByToken',\n  async (_, thunkApi) => {\n    const token = thunkApi.getState().auth.token;\n    tokenState.setToken(token);\n    const { data } = await axios('/users/current');\n    return data;\n  },\n);\n","import { createSlice } from '@reduxjs/toolkit';\nimport { register, login, logOut, fetchByToken } from './authOperation';\n\nconst initialState = {\n  user: { name: null, email: null },\n  isLoader: false,\n  token: null,\n  error: false,\n  isLoggedIn: false,\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [register.pending]: state => {\n      state.isLoader = true;\n      state.error = false;\n    },\n    [register.fulfilled]: (state, { payload }) => {\n      state.user = payload.user;\n      state.isLoader = false;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [register.rejected]: state => {\n      state = { ...initialState, error: true };\n    },\n    [login.pending]: state => {\n      state.isLoader = true;\n      state.error = false;\n    },\n    [login.fulfilled]: (state, { payload }) => {\n      state.user = payload.user;\n      state.isLoader = false;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [login.rejected]: state => {\n      state = { ...initialState, error: true };\n    },\n    [logOut.pending]: state => {\n      state.error = false;\n    },\n    [logOut.fulfilled]: state => {\n      state.isLoader = false;\n      state.token = null;\n      state.isLoggedIn = false;\n      state.user = { name: null, email: null };\n    },\n    [logOut.rejected]: state => {\n      state.error = true;\n      state.isLoader = false;\n    },\n    [fetchByToken.pending]: state => {\n      state.error = false;\n      state.isLoader = true;\n    },\n    [fetchByToken.fulfilled]: (state, { payload }) => {\n      state.user = payload;\n      state.isLoader = false;\n      state.isLoggedIn = true;\n    },\n    [fetchByToken.rejected]: state => {\n      state.error = true;\n      state.isLoader = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport contactsReducer from './contactsRedux/contactsReducer';\r\nimport authSlice from './authRedux/authSlice';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authSlice),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nlet persist = persistStore(store);\r\n\r\nexport { store, persist };\r\n","import axios from 'axios';\r\nimport * as contactsAction from './contactsAction';\r\nimport * as store from '../storeMain';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst fetchContactsOnServer = () => async dispatch => {\r\n  dispatch(contactsAction.fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios('/contacts');\r\n\r\n    dispatch(contactsAction.fetchContactsSuccess(data));\r\n\r\n    dispatch(contactsAction.isEmpty(data[0] ? false : true));\r\n  } catch (error) {\r\n    dispatch(contactsAction.fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nconst fetchPostContactOnServer = dataContact => async dispatch => {\r\n  dispatch(contactsAction.fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.post('/contacts', dataContact);\r\n    dispatch(contactsAction.addContact(data));\r\n\r\n    dispatch(contactsAction.isEmpty(false));\r\n  } catch (error) {\r\n    dispatch(contactsAction.fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst fetchDeleteContactOnServer = id => async dispatch => {\r\n  dispatch(contactsAction.fetchContactsRequest());\r\n  try {\r\n    const data = await axios.delete(`/contacts/${id}`);\r\n    console.log(data);\r\n    dispatch(contactsAction.deleteContact(id));\r\n    const length = store.store.getState().contacts.items.length;\r\n    dispatch(contactsAction.isEmpty(length > 1 ? false : true));\r\n  } catch (error) {\r\n    dispatch(contactsAction.fetchContactsError(error));\r\n  }\r\n};\r\nconst contactsOperation = {\r\n  fetchContactsOnServer,\r\n  fetchPostContactOnServer,\r\n  fetchDeleteContactOnServer,\r\n};\r\nexport default contactsOperation;\r\n","import { useState } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport Button from '../Button';\nimport styles from './Form.module.css';\nimport Input from '../Input';\n\nimport notify from 'helpers/notify';\nimport { contactsOperation, contactsSelector } from '../../redux/contactsRedux';\n\nconst Form = ({ setIsVisibleModal }) => {\n  const [state, setState] = useState({ name: '', number: '' });\n  const items = useSelector(contactsSelector.getItems);\n  const dispatch = useDispatch();\n\n  const onChangeInput = ({ target: { name, value } }) => {\n    setState({ ...state, [name]: value });\n  };\n\n  const addContactOnPhonebook = ev => {\n    ev.preventDefault();\n    const {\n      target: { name, number },\n    } = ev;\n    if (\n      items.find(user => user.name.toLowerCase() === name.value.toLowerCase())\n    ) {\n      return notify(name.value.toUpperCase());\n    }\n\n    setIsVisibleModal(false);\n    dispatch(\n      contactsOperation.fetchPostContactOnServer({\n        name: name.value,\n        number: number.value,\n        id: uuidv4(),\n      }),\n    );\n\n    clearInput();\n  };\n\n  function clearInput() {\n    setState({ name: '', number: '' });\n  }\n\n  return (\n    <form className={styles.Form} onSubmit={addContactOnPhonebook}>\n      <div className={styles.Container}>\n        <Input\n          id=\"name\"\n          value={state.name}\n          placeholder=\" \"\n          onChangeInput={onChangeInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          textLabel=\"name\"\n        />\n      </div>\n\n      <div className={styles.Container}>\n        <Input\n          id=\"number\"\n          value={state.number}\n          placeholder=\" \"\n          onChangeInput={onChangeInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          textLabel=\"number\"\n        />\n      </div>\n      <div className={styles.Button}>\n        <Button type=\"onClick\">Add contact</Button>\n      </div>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  setIsVisibleModal: PropTypes.func.isRequired,\n};\n\nexport default connect()(Form);\n","import { useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ toggleIsVisible, children, isVisibleModal }) {\n  const handleKeyDown = useCallback(\n    ({ code }) => {\n      if (code === 'Escape') {\n        toggleIsVisible();\n      }\n    },\n    [toggleIsVisible],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  function closeBackdropOnClick({ target, currentTarget }) {\n    if (currentTarget === target) {\n      toggleIsVisible();\n    }\n  }\n\n  if (!isVisibleModal) {\n    return null;\n  }\n\n  return createPortal(\n    <div className={Styles.Backdrop} onClick={closeBackdropOnClick}>\n      <div className={Styles.Modal}>{children}</div>\n      <div className={Styles.Close}>\n        <button\n          type=\"button\"\n          className=\"btn-close btn-close-white\"\n          color=\"#fff\"\n          onClick={toggleIsVisible}\n          aria-label=\"Close\"\n          width=\"30px\"\n          height=\"30px\"\n        ></button>\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  toggleIsVisible: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  isVisibleModal: PropTypes.bool.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contact.module.css';\r\nimport { contactsOperation } from '../../redux/contactsRedux';\r\n\r\nconst Contact = ({ name, number, id }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = () => {\r\n    dispatch(contactsOperation.fetchDeleteContactOnServer(id));\r\n  };\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className={styles.name}>{name}:</p>\r\n      <p className={styles.number}>{number}</p>\r\n      <button className={styles.button} onClick={onDeleteContact} type=\"button\">\r\n        Delete contact\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect()(Contact);\r\n","import { useState } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Input from '../Input';\r\nimport { filterContacts } from '../../redux/contactsRedux/contactsAction';\r\nimport Styles from './Filter.module.css';\r\n\r\nconst Filter = ({ onChangeInputByFilter }) => {\r\n  const [state, setState] = useState('');\r\n  const items = useSelector(state => state.contacts.items);\r\n  const onChangeInput = ({ target: { value } }) => {\r\n    setState(value);\r\n    onChangeInputByFilter(value);\r\n  };\r\n\r\n  if (!items.length) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={Styles.Container}>\r\n      <Input\r\n        value={state}\r\n        name=\"search\"\r\n        placeholder=\"Найти контакт\"\r\n        onChangeInput={onChangeInput}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChangeInputByFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeInputByFilter: value => dispatch(filterContacts(value)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","export default __webpack_public_path__ + \"static/media/krik.3a59663f.jpg\";","import React, { useEffect } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\n\nimport styles from './ContactList.module.css';\nimport { contactsOperation, contactsSelector } from '../../redux/contactsRedux';\nimport Contact from '../../components/Contact';\nimport ButtonBlack from 'components/Button/Button';\nimport Filter from 'components/Filter';\nimport krik from 'icon/krik.jpg';\n\nconst ContactsView = ({ toggleIsVisible }) => {\n  const { items } = useSelector(contactsSelector.getContacts);\n  const filteredItems = useSelector(contactsSelector.visibleItems);\n  const dispatch = useDispatch();\n\n  const isEmpty = useSelector(contactsSelector.getIsEmpty);\n\n  useEffect(() => {\n    dispatch(contactsOperation.fetchContactsOnServer());\n  }, [dispatch, isEmpty]);\n\n  return (\n    <>\n      <ButtonBlack type=\"button\" onClick={toggleIsVisible}>\n        Добавить контакт\n      </ButtonBlack>\n\n      {items.length > 1 && <Filter />}\n\n      {filteredItems.length ? (\n        <ul className={styles.contacts}>\n          {filteredItems.map(({ name, number, id }) => (\n            <Contact key={id} name={name} number={number} id={id} />\n          ))}\n        </ul>\n      ) : null}\n\n      {!items[0] && isEmpty && (\n        <>\n          <p className={styles.notification}>\"The phone book is empty\"</p>{' '}\n          <img src={krik} alt=\"a cat\"></img>\n        </>\n      )}\n\n      {items[0] && !filteredItems.length && isEmpty && (\n        <p className={styles.notification}>\n          There is no such name in the database{' '}\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default connect()(ContactsView);\n","export const getName = state => state.auth.user.name;\nexport const getIsLoggedIn = state => state.auth.isLoggedIn;\nexport const getIsLoader = state => state.auth.isLoader;\nexport const getToken = state => state.auth.token;\n","import { useSelector } from 'react-redux';\n\nimport { BsFillPersonCheckFill } from 'react-icons/bs';\nimport style from './UserMenu.module.css';\nimport * as authSelector from '../../redux/authRedux/authSelector';\nimport { useDispatch } from 'react-redux';\nimport ButtonBlack from '../Button/Button';\nimport * as authOperation from '../../redux/authRedux/authOperation';\n\nconst UserMenu = () => {\n  const dispatch = useDispatch();\n\n  const name = useSelector(authSelector.getName);\n  return (\n    <div>\n      <div className={style.Text}>Привет - {name}</div>\n      <ButtonBlack\n        type=\"button\"\n        onClick={() => dispatch(authOperation.logOut())}\n      >\n        ВЫЙТИ\n      </ButtonBlack>\n      <BsFillPersonCheckFill className={style.Icon} />\n    </div>\n  );\n};\nexport default UserMenu;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport * as authSelector from '../../redux/authRedux/authSelector';\nimport UserMenu from 'components/UserMenu';\nimport style from './Header.module.css';\n\nconst Header = () => {\n  const isLoggedIn = useSelector(authSelector.getIsLoggedIn);\n\n  return (\n    <header>\n      <nav className={style.Navigation}>\n        <div>\n          <NavLink\n            exact\n            to=\"/\"\n            className={style.Nav}\n            activeClassName={style.Active}\n          >\n            Главная\n          </NavLink>\n          <NavLink\n            exact\n            to=\"/contacts\"\n            className={style.Nav}\n            activeClassName={style.Active}\n          >\n            Список контактов\n          </NavLink>\n        </div>\n\n        {isLoggedIn ? (\n          <UserMenu />\n        ) : (\n          <div>\n            <NavLink\n              exact\n              to=\"/register\"\n              className={style.Nav}\n              activeClassName={style.Active}\n            >\n              Регистрация\n            </NavLink>\n            <NavLink\n              exact\n              to=\"/login\"\n              className={style.Nav}\n              activeClassName={style.Active}\n            >\n              Логин\n            </NavLink>\n          </div>\n        )}\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useDispatch } from 'react-redux';\nimport * as authOperation from '../../redux/authRedux/authOperation';\nimport styles from './Register.module.css';\n\nconst RegisterView = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = ev => {\n    ev.preventDefault();\n    const {\n      target: { name, email, password },\n    } = ev;\n    const data = {\n      name: name.value,\n      email: email.value,\n      password: password.value,\n    };\n    dispatch(authOperation.register(data));\n  };\n\n  return (\n    <Form className={styles.Form} onSubmit={onSubmit}>\n      <h2 className={styles.Text}>Регистрация</h2>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Имя</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Введите имя\" name=\"name\" />\n        <Form.Text className=\"text-muted\"></Form.Text>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Электронная почта</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Введите почту\" name=\"email\" />\n        <Form.Text className=\"text-muted\"></Form.Text>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Пароль</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Введите пароль\"\n          name=\"password\"\n        />\n      </Form.Group>\n\n      <Button className={styles.Button} variant=\"dark\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nexport default RegisterView;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useDispatch } from 'react-redux';\nimport * as authOperation from '../../redux/authRedux/authOperation';\nimport styles from './Login.module.css';\n\nconst LoginView = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = ev => {\n    ev.preventDefault();\n    const {\n      target: { email, password },\n    } = ev;\n    const data = {\n      email: email.value,\n      password: password.value,\n    };\n    dispatch(authOperation.login(data));\n  };\n\n  return (\n    <>\n      <Form className={styles.Form} onSubmit={onSubmit}>\n        <h2 className={styles.Text}>Авторизация</h2>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Электронная почта</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Введите почту\" name=\"email\" />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Пароль</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Введите пароль\"\n            name=\"password\"\n          />\n        </Form.Group>\n\n        <Button className={styles.Button} variant=\"dark\" type=\"submit\">\n          Отправить\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginView;\n","import { Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport * as authSelector from '../../redux/authRedux/authSelector';\r\n\r\n\r\nconst PrivateRoute = ({ children, props, urlFToRedirect }) => {\r\n    const isLoggedIn = useSelector(authSelector.getIsLoggedIn)\r\n    return <Route {...props}>{isLoggedIn ? children : <Redirect to={urlFToRedirect}/>}</Route>\r\n}\r\n\r\nexport default PrivateRoute;","import { Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport * as authSelector from '../../redux/authRedux/authSelector';\r\n\r\nconst PublicRoute = ({ children, props, restricted = false, urlFToRedirect }) => {\r\n    const isLoggedIn = useSelector(authSelector.getIsLoggedIn)\r\n    return <Route {...props}>{isLoggedIn && restricted?<Redirect to={urlFToRedirect}/>:children}</Route>\r\n}\r\n\r\nexport default PublicRoute;","export default __webpack_public_path__ + \"static/media/kiss.18666a58.jpg\";","import React, { useState, useEffect, Suspense } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { css } from '@emotion/react';\nimport PacmanLoader from 'react-spinners/PacmanLoader';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../index.css';\nimport Form from './Form/Form';\nimport Modal from './Modal/Modal';\nimport ContactsView from '../view/ContactsView/ContactsView';\nimport * as authSelector from 'redux/authRedux/authSelector';\nimport Header from 'components/Header';\nimport RegisterView from 'view/RegisterView';\nimport LoginView from 'view/LoginView';\nimport * as authOperation from '../redux/authRedux/authOperation';\nimport PrivateRoute from './Routes/PrivateRoute';\nimport PublicRoute from './Routes/PublicRoute';\nimport kiss from '../icon/kiss.jpg';\n\nconst override = css`\n  display: block;\n  margin: 50px;\n  border-color: red;\n`;\n\nconst App = () => {\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const dispatch = useDispatch();\n  const token = useSelector(authSelector.getToken);\n  const isLoader = useSelector(authSelector.getIsLoader);\n  const toggleIsVisible = () =>\n    setIsVisibleModal(s => {\n      return !s;\n    });\n\n  useEffect(() => {\n    if (token === null) {\n      return;\n    }\n    dispatch(authOperation.fetchByToken());\n  }, [dispatch, token]);\n\n  return isLoader ? (\n    <PacmanLoader color=\"green\" loading={isLoader} css={override} size={35} />\n  ) : (\n    <>\n      <Header />\n      <Suspense fallback={<p>Загружаем.....</p>}>\n        <Switch>\n          <Route exact path=\"/\">\n            <img src={kiss} width=\"400px\" alt=\"phone\"></img>\n          </Route>\n\n          <PrivateRoute exact path=\"/contacts\" urlFToRedirect=\"/login\">\n            <ContactsView toggleIsVisible={toggleIsVisible} />\n          </PrivateRoute>\n\n          <PublicRoute\n            exact\n            path=\"/register\"\n            urlFToRedirect=\"/contacts\"\n            restricted\n          >\n            <RegisterView />\n          </PublicRoute>\n          <PublicRoute\n            exact\n            path=\"/login\"\n            urlFToRedirect=\"/contacts\"\n            restricted\n          >\n            <LoginView />\n          </PublicRoute>\n        </Switch>\n      </Suspense>\n      <ToastContainer />\n      <Modal toggleIsVisible={toggleIsVisible} isVisibleModal={isVisibleModal}>\n        <Form setIsVisibleModal={setIsVisibleModal} />\n      </Modal>\n    </>\n  );\n};\n\nexport default connect()(App);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as store from './redux/storeMain';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persist}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Header_Navigation__CEWYK\",\"Nav\":\"Header_Nav__vrJub\",\"Active\":\"Header_Active__2V3a7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__23Cse\",\"Container\":\"Form_Container__19PId\",\"Button\":\"Form_Button__3uPnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__1gene\",\"name\":\"Contact_name__3gRL5\",\"number\":\"Contact_number__2TF6c\",\"button\":\"Contact_button__Y4OO0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Modal_Backdrop__guglC\",\"Modal\":\"Modal_Modal__woYGM\",\"Close\":\"Modal_Close__JefZv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1tLCN\",\"notification\":\"ContactList_notification__CufYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Register_Form__1bEei\",\"Button\":\"Register_Button__1lYa8\",\"Text\":\"Register_Text__21sbK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Login_Form__33Kzc\",\"Button\":\"Login_Button__2imI-\",\"Text\":\"Login_Text__RP-SL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Input_Label__3L2HD\",\"Input\":\"Input_Input__1e1gR\",\"label\":\"Input_label__256n4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Text\":\"UserMenu_Text__3l0pw\",\"Icon\":\"UserMenu_Icon__1n77D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Filter_Container__3fcru\"};"],"sourceRoot":""}